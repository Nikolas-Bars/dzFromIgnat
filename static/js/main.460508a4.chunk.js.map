{"version":3,"sources":["p2-homeworks/h3/Greeting.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","message","avatar","src","alt","data","name","messageText","blockTime","time","messageData","HW1","SuperButton","red","restProps","finalClassName","btn","first","default","first1","disabledStyle","disabled","Affair","affair","onClick","deleteAffairCallback","_id","affairSpan","priority","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","Affairs","mappedAffairs","map","a","onChangeInput","event","someText","setText","setError","addAffair","text","trim","setAffairs","length","useState","affairInputButton","style","border","color","buttons","setFilter","defaultAffairs","HW2","affairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","totalUsers","someClass","errorSpan","superButton","totalUser","GreetingContainer","users","addUserCallback","setName","HW3","console","log","alert","setUsers","user","v1","SuperCheckbox","onChangeChecked","children","checkbox","HW4","showAlert","checked","setChecked","column","testSpanError","testInputClassName","blue","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","spanB","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","valueFromLocalStorage","replace","PreJunior","JuniorPlus","SuperSelect","options","onChangeOption","mappedOptions","index","SuperRadio","o","i","mappedOptions2","arr","HW7","Junior","PATH","Routess","path","element","Header","navLinks","to","isActive","active","HW5","Routes","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,UAAY,4BAA4B,MAAQ,wBAAwB,UAAY,4BAA4B,IAAM,sBAAsB,SAAW,2BAA2B,IAAM,sBAAsB,UAAY,4BAA4B,YAAc,gC,gBCAtRD,EAAOC,QAAU,CAAC,UAAY,2BAA2B,QAAU,yBAAyB,IAAM,qBAAqB,OAAS,wBAAwB,WAAa,4BAA4B,kBAAoB,qC,gBCArND,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,sBAAsB,YAAc,6BAA6B,UAAY,2BAA2B,KAAO,wB,kBCAzOD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,OAAS,4BAA4B,SAAW,8BAA8B,IAAM,yBAAyB,MAAQ,6B,iBCA9KD,EAAOC,QAAU,CAAC,SAAW,yBAAyB,SAAW,2B,gBCAjED,EAAOC,QAAU,CAAC,MAAQ,8BAA8B,WAAa,mCAAmC,aAAe,qCAAqC,MAAQ,8BAA8B,WAAa,qC,gBCA/MD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,2BAA2B,mBAAqB,kC,iBCAxID,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,kBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,MAAQ,mC,wMCyBXC,MAhBf,SAAiBC,GACb,OACI,yBAAKC,UAAWC,IAAEC,SAEhB,yBAAKF,UAAWC,IAAEE,QAAQ,yBAAKC,IAAKL,EAAMI,OAAQE,IAAK,cAErD,yBAAKL,UAAWC,IAAEK,MACd,yBAAKN,UAAWC,IAAEM,MAAlB,IAA0BR,EAAMQ,MAChC,0BAAMP,UAAWC,IAAEO,aAAcT,EAAMG,SACvC,yBAAKF,UAAWC,IAAEQ,WAAW,0BAAMT,UAAWC,IAAES,MAAOX,EAAMW,UChBvEC,EACM,qFADNA,EAEI,QAFJA,EAGO,wDAHPA,EAII,QAkBKC,MAff,WACI,OACI,6BACI,kBAAC,EAAD,CACIT,OAAQQ,EACRJ,KAAMI,EACNT,QAASS,EACTD,KAAMC,IAEV,6BACA,+B,uCCUGE,EApBqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,IACAd,EAGH,EAHGA,UACGe,EAEN,mCAEKC,EAAc,UAAMF,EAAG,UAAMb,IAAEgB,IAAR,YAAehB,IAAEiB,OAAjB,UAA8BjB,IAAEkB,QAAhC,YAA2ClB,IAAEmB,QAAtD,YAAkEpB,GAEhFqB,EAAgBpB,IAAEqB,SAExB,OACI,0CACItB,UAAWe,EAAUO,SAAWD,EAAgBL,GAC5CD,K,gBCFDQ,MAZf,SAAgBxB,GAKZ,OACI,yBAAKC,UAAWC,IAAEuB,QACd,kBAAC,EAAD,CAAaC,QANE,WACnB1B,EAAM2B,qBAAqB3B,EAAMyB,OAAOG,OAKpC,KADJ,IAC0D,0BAAM3B,UAAWC,IAAE2B,YAAa7B,EAAMyB,OAAOjB,KAA7C,IAAoDR,EAAMyB,OAAOK,Y,iBCsDpHC,EAzD2C,SAAC,GAatD,EAXGC,KAWF,IAVEC,EAUH,EAVGA,SACAC,EASH,EATGA,aACAC,EAQH,EARGA,WACAC,EAOH,EAPGA,QACAC,EAMH,EANGA,MACApC,EAKH,EALGA,UACAqC,EAIH,EAJGA,cAEGtB,EAEN,6GA+BKuB,EAAkB,UAAMrC,IAAEmC,MAAR,YAAiBC,GAAgC,IACnEE,EAAmB,UAAMtC,IAAEuC,MAAR,YAAiBJ,EAAQnC,IAAEwC,WAAaxC,IAAEyC,WAA1C,YAAwD1C,GAEjF,OACI,oCACI,yCAAO+B,KAAM,OAAQC,SAnCJ,SAACW,GACtBX,GAAYA,EAASW,GAErBV,GAAgBA,EAAaU,EAAEC,cAAcC,QAgCQX,WAhB9B,SAACS,GACxBT,GAAcA,EAAWS,GAEzBR,GAAqB,UAAVQ,EAAEG,KAAmBX,KAaqDnC,UAAWuC,GAA0BxB,IAErHqB,GAAS,0BAAMpC,UAAWsC,GAAqBF,KC8B7CW,MAhFf,SAAiBhD,GACb,IAAMiD,EAAgBjD,EAAMO,KAAK2C,KAAI,SAACC,GAAD,OACnC,yBAAKJ,IAAKI,EAAEvB,KACV,kBAAC,EAAD,CAEIH,OAAQ0B,EAERxB,qBAAsB3B,EAAM2B,2BAiB9ByB,EAAgB,SAACC,GACnB,IAAIC,EAAWD,EAAMR,cAAcC,MACnC9C,EAAMuD,QAAQD,GACdE,EAAS,OAGPC,EAAY,WACY,KAAtBzD,EAAM0D,KAAKC,QAKX3D,EAAM4D,WAAN,CAAkB,CAAChC,IAAK5B,EAAMO,KAAKsD,OAAS,EAAGrD,KAAMR,EAAM0D,KAAM5B,SAAU,SAA3E,mBAAuF9B,EAAMO,QAC7FiD,EAAS,MACTxD,EAAMuD,QAAQ,KANdC,EAAS,UAhCqB,EA0CdM,mBAAyB,MA1CX,mBA0CjCzB,EA1CiC,KA0C1BmB,EA1C0B,KAoDtC,OACI,6BAEI,yBAAKvD,UAAWC,IAAE6D,mBACb1B,EAAQ,6BAAK,kBAAC,EAAD,CAAgB2B,MAZ5B,CACVC,OAAQ,iBAW4CnB,MAAO9C,EAAM0D,KAAMzB,SAAUmB,IACjE,4BAAQ1B,QAAS+B,GAAjB,OACA,6BACA,yBAAKO,MAXF,CACnBE,MAAO,QAUS,uJAEF,6BAAK,kBAAC,EAAD,CAAgBpB,MAAO9C,EAAM0D,KAAMzB,SAAUmB,IAChD,kBAAC,EAAD,CAAa1B,QAAS+B,GAAtB,SAMXR,EACD,yBAAKhD,UAAWC,IAAEiE,SACd,kBAAC,EAAD,CAAazC,QA1DV,WACX1B,EAAMoE,UAAU,SAyDR,OACA,kBAAC,EAAD,CAAa1C,QAxDT,WACZ1B,EAAMoE,UAAU,UAuDR,QACA,kBAAC,EAAD,CAAa1C,QAtDP,WACd1B,EAAMoE,UAAU,YAqDR,UACA,kBAAC,EAAD,CAAa1C,QApDV,WACX1B,EAAMoE,UAAU,SAmDR,UC1EVC,EAAoC,CACtC,CAACzC,IAAK,EAAGpB,KAAM,QAASsB,SAAU,QAClC,CAACF,IAAK,EAAGpB,KAAM,QAASsB,SAAU,OAClC,CAACF,IAAK,EAAGpB,KAAM,QAASsB,SAAU,OAClC,CAACF,IAAK,EAAGpB,KAAM,OAAQsB,SAAU,QACjC,CAACF,IAAK,EAAGpB,KAAM,aAAcsB,SAAU,WAqD5BwC,EAnCH,WAAO,IAAD,EACgBR,mBAA4BO,GAD5C,mBACPE,EADO,KACEX,EADF,OAEcE,mBAAqB,OAFnC,mBAEPU,EAFO,KAECJ,EAFD,KAIRK,EAfmB,SAACF,EAA4BC,GACtD,MAAe,QAAXA,EAAyBD,EAAQC,QAAO,SAAAE,GAAE,OAAIA,KACnC,QAAXF,EAAyBD,EAAQC,QAAO,SAAAE,GAAE,MAAoB,QAAhBA,EAAG5C,YACtC,SAAX0C,EAA0BD,EAAQC,QAAO,SAAAE,GAAE,MAAoB,SAAhBA,EAAG5C,YACvC,WAAX0C,EAA4BD,EAAQC,QAAO,SAAAE,GAAE,MAAoB,WAAhBA,EAAG5C,iBAAxD,EAWwB6C,CAAcJ,EAASC,GAJjC,EASIV,mBAAS,QATb,mBASbJ,EATa,KASPH,EATO,KAYd,OACI,yBAAKtD,UAAWC,IAAEoE,KACd,6BADJ,cAKI,kBAAC,EAAD,CACIZ,KAAMA,EACNnD,KAAMkE,EACNL,UAAWA,EACXzC,qBAjBiB,SAACC,GAAD,OAAiBgC,EAVtB,SAACW,EAA4B3C,GACrD,OAAO2C,EAAQC,QAAO,SAAAE,GAAE,OAAIA,EAAG9C,MAAQA,KASkBgD,CAAaL,EAAS3C,KAkBnE2B,QAASA,EACTK,WAAYA,IAGhB,6BAGA,+B,gBCpCGiB,EAlB+B,SAAC,GAEzC,IADDrE,EACA,EADAA,KAAMsE,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAAS1C,EAChC,EADgCA,MAAO2C,EACvC,EADuCA,WAErB3C,EAAQnC,IAAEmC,MAAQnC,IAAE+E,UAGvC,OACI,6BACI,kBAAC,EAAD,CAAgBnC,MAAOtC,EAAMyB,SAAU6C,EAAiB7E,UAAWoC,EAAQnC,IAAEmC,MAAQnC,IAAE+E,YAEvF,0BAAMhF,UAAWoC,EAAQnC,IAAEgF,UAAY,IAAK7C,GAE5C,yBAAKpC,UAAWC,IAAEiF,aAAa,kBAAC,EAAD,CAAazD,QAASqD,GAAtB,QAC/B,0BAAM9E,UAAWC,IAAEkF,WAAYJ,KC0B5BK,EAtCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClEzB,mBAAiB,IADiD,mBACnFtD,EADmF,KAC7EgF,EAD6E,OAEhE1B,mBAAqC,MAF2B,mBAEnFzB,EAFmF,KAE5EmB,EAF4E,KAsBpFwB,EAAaM,EAAMzB,OAEzB,OAEI,yBAAK5D,UAAWC,IAAEuF,KAClB,kBAAC,EAAD,CACIjF,KAAMA,EACNsE,gBAzBgB,SAAClC,GACrB,IAAIc,EAAOd,EAAEC,cAAcC,MAC3B0C,EAAQ9B,GACRF,EAAS,MACTkC,QAAQC,IAAInF,IAsBRuE,QApBQ,WACQ,KAAhBvE,EAAKmD,QACL4B,EAAgB/E,GAChBgF,EAAQ,IACRI,MAAM,UAAD,OAAWpF,EAAX,OAELgD,EAAS,sBAeTnB,MAAOA,EACP2C,WAAYA,M,QCZTS,MAxBf,WAAgB,IAAD,EACe3B,mBAA0B,IADzC,mBACJwB,EADI,KACGO,EADH,KAQX,OACI,6BACI,6BADJ,cAKI,kBAAC,EAAD,CAAmBP,MAAOA,EAAOC,gBAXjB,SAAC/E,GACrB,IAAIsF,EAAO,CAAClE,IAAKmE,cAAMvF,KAAMA,GAC7BqF,EAAS,CAACC,GAAF,mBAAWR,QAWf,6BAGA,+B,kCCWGU,EA9ByC,SAAC,GASpD,EAPGhE,KAOH,EANGC,SAMH,EANagE,gBAMZ,IALEhG,EAKH,EALGA,UACAiG,GAIH,EALc5D,cAKd,EAJG4D,UAEGlF,EAEN,4FAKKwB,EAAmB,UAAMtC,IAAEiG,SAAR,YAAoBlG,GAAwB,IAErE,OACI,+BACI,yCACI+B,KAAM,WACNC,SAVa,SAACW,KAWd3C,UAAWuC,GAEPxB,IAEPkF,GAAY,0BAAMjG,UAAWC,IAAEoC,eAAgB4D,KCkC7CE,MAhEf,WAAgB,IAAD,EACatC,mBAAiB,IAD9B,mBACJJ,EADI,KACEH,EADF,KAELlB,EAAQqB,EAAO,GAAK,QAEpB2C,EAAY,WACVhE,EACAuD,MAAM,gFAENA,MAAMlC,IARH,EAYmBI,oBAAkB,GAZrC,mBAYJwC,EAZI,KAYKC,EAZL,KAeX,OACI,6BACI,6BADJ,cAII,yBAAKtG,UAAWC,IAAEsG,QACd,kBAAC,EAAD,CAAgB1D,MAAOY,EAAMxB,aAAcqB,EAASnB,QAASiE,EAAW/D,cAAepC,IAAEuG,cAAexG,UAAWC,IAAEwG,mBAAoBrE,MAASA,IAGlJ,kBAAC,EAAD,CAAgBpC,UAAWC,IAAEyG,OAJjC,oOASI,kBAAC,EAAD,gBAIA,kBAAC,EAAD,CAAa5F,KAAG,EAACW,QAAS2E,GAA1B,WAIA,kBAAC,EAAD,CAAa9E,UAAQ,GAArB,YAMA,kBAAC,EAAD,CACI+E,QAASA,EACTL,gBAAiBM,GAFrB,cAQA,kBAAC,EAAD,CAAeD,QAASA,EAASrE,SAtCxB,SAACW,GAAD,OAAsC2D,EAAW3D,EAAEC,cAAcyD,aAyC9E,6BAKA,+B,iBCaGM,EA1D4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACA1E,EAKH,EALGA,QACA2E,EAIH,EAJGA,UAEG/F,EAEN,8DAC+B8C,oBAAkB,GADjD,mBACMkD,EADN,KACgBC,EADhB,OAE8DF,GAAa,GAArEb,EAFN,EAEMA,SAAUgB,EAFhB,EAEgBA,cAAejH,EAF/B,EAE+BA,UAAckH,EAF7C,wDAoBK7E,EAAa,UAAMpC,IAAEkH,MAAR,YAAiBnH,GAEpC,OACI,oCACK+G,EAEO,kBAAC,EAAD,eACIH,WAAS,EACTC,OAnBG,SAAClE,GACpBqE,GAAY,GAEZH,GAAUA,EAAOlE,IAiBDR,QAzBI,WAGpBA,GAAWA,MAwBSpB,IAGR,wCACIkG,cArBU,SAACtE,GAC1BqE,GAAY,GAEbC,GAAiBA,EAActE,IAmBf3C,UAAWqC,GAEP6E,GAGHjB,GAAYlF,EAAU8B,SCpExC,SAASuE,EAAatE,EAAauE,GACtC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQ5E,EAAKwE,GAmB9BF,EAAqB,OAAQ,CAACO,EAAG,IAAKC,EAAG,KAflC,SAAyB9E,EAAa+E,GACzC,IAAIR,EAAQQ,EACNP,EAAgBG,aAAaK,QAAQhF,GACrB,OAAlBwE,IAAwBD,EAAQE,KAAKQ,MAAMT,IAe1BU,CAAwB,OAAQ,CAACL,EAAG,GAAIC,EAAG,ICerDK,MApCf,WAAgB,IAAD,EACepE,mBAAiB,IADhC,mBACJhB,EADI,KACGqF,EADH,KAYX,OACI,6BACI,6BADJ,cAKI,6BACI,kBAAC,EAAD,CACIrF,MAAOA,EACPZ,aAAciG,EACdpB,UAAW,CAACb,SAAUpD,OAAQsF,EAAY,oBAGlD,kBAAC,EAAD,CAAa1G,QAtBR,WACT2F,EAAkB,sBAAuBvE,KAqBrC,QACA,kBAAC,EAAD,CAAapB,QApBL,WACZ,IAAI2G,EAAwBX,aAAaK,QAAQ,uBAC9CM,GACCF,EAASE,EAAsBC,QAAQ,SAAS,OAiBhD,WAEA,6BAGA,+BChBGC,MAbf,WACI,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFGC,GAVI,WACf,OACI,6BACI,6CC8BGC,GA1BqC,SAAC,GAM/C,IAJEC,EAIH,EAJGA,QACUC,GAGb,EAHG1G,SAGH,EAHa0G,gBACP3H,EAEN,uDACK4H,EAAuBF,EAAUA,EAAQxF,KAAI,SAACwB,EAAImE,GACpD,OACI,4BAAQ9F,IAAK8F,EAAO/F,MAAO4B,GAAKA,MAEnC,GAQL,OACI,0CAAQzC,SAPa,SAACW,GACtB+F,GAAkBA,EAAe/F,EAAEC,cAAcC,OACjD4C,QAAQC,IAAI3E,KAK4BA,GACnC4H,IC4BEE,GAjDmC,SAAC,GAO9C,EALG9G,KAKF,IALQxB,EAKT,EALSA,KACNkI,EAIH,EAJGA,QAAS5F,EAIZ,EAJYA,MACC6F,GAGb,EAHG1G,SAGH,EAHa0G,gBAaRC,GAVL,6EAU4BF,EAAUA,EAAQxF,KAAI,SAAC6F,EAAGC,GAEnD,OAAO,2BAAOjG,IAAKvC,EAAO,IAAMwI,GAC5B,2BAAOhH,KAAM,QAASxB,KAAM,cAAe8F,QAASyC,IAAMjG,EACnDb,SAAU,WAZA,IAACyC,IAYqBqE,EAX3CJ,GAAkBA,EAAejE,MAY5BqE,MAEJ,IAGCE,EAAwBP,EAAUA,EAAQxF,KAAI,SAAC6F,EAAGC,GAEpD,OAAO,2BAAOjG,IAAKvC,EAAO,IAAMwI,GAC5B,2BAAOhH,KAAM,QAASxB,KAAM,gBAE3BuI,MAEJ,GAGL,OACI,oCACI,6BACCH,EADD,sGAGA,6BACCK,KChDPC,GAAM,CAAC,IAAK,IAAK,KAmDRC,OAjDf,WAAgB,IAAD,EACqBrF,mBAASoF,GAAI,IADlC,mBACJpG,EADI,KACG6F,EADH,KAGX,OACI,6BACI,6BADJ,cAKI,6BACI,kBAAC,GAAD,CACID,QAASQ,GACTpG,MAAOA,EACP6F,eAAgBA,KAQxB,6BACI,kBAAC,GAAD,CACInI,KAAM,QACNkI,QAASQ,GACTpG,MAAOA,EACP6F,eAAgBA,KAcxB,6BAIA,+BCrCGS,GAVA,WACX,OACI,6BACI,4BACI,kBAAC,GAAD,SCMHC,GACG,cADHA,GAED,UAFCA,GAGI,eAwCFC,OAnCf,WACI,OACI,6BAEI,kBAAC,IAAD,KAEI,kBAAC,IAAD,CAAOC,KAAM,IAAKC,QAAS,kBAAC,EAAD,QAC3B,kBAAC,IAAD,CAAOD,KAAMF,GAAiBG,QAAS,kBAAC,EAAD,QACvC,kBAAC,IAAD,CAAOD,KAAMF,GAAaG,QAAS,kBAAC,GAAD,QACnC,kBAAC,IAAD,CAAOD,KAAMF,GAAkBG,QAAS,kBAAC,GAAD,WCIzCC,OA5Bf,WACI,OACI,yBAAKxJ,UAAWC,IAAEwJ,UAGd,kBAAC,IAAD,CAASC,GAAIN,GAAiBpJ,UAAW,qBAAE2J,SAAwB1J,IAAE2J,OAAS,KAA9E,cACA,kBAAC,IAAD,CAASF,GAAIN,GAAapJ,UAAW,qBAAE2J,SAAwB1J,IAAE2J,OAAS,KAA1E,UACA,kBAAC,IAAD,CAASF,GAAIN,GAAkBpJ,UAAW,qBAAE2J,SAAwB1J,IAAE2J,OAAS,KAA/E,iBCEGC,OAXf,WACI,OACI,6BAEI,kBAAC,GAAD,MACA,kBAACC,GAAD,QCQGC,OAZf,WACI,OAGI,yBAAK/J,UAAWC,IAAE8J,KAEd,kBAAC,GAAD,QCCQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCXRC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,KACI,kBAAC,GAAD,QAGRC,SAASC,eAAe,SD8HpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAA5I,GACHqD,QAAQrD,MAAMA,EAAMlC,c","file":"static/js/main.460508a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3rzAG\",\"error\":\"Greeting_error__3a2b1\",\"errorSpan\":\"Greeting_errorSpan__pQnYm\",\"btn\":\"Greeting_btn__21N86\",\"btnThree\":\"Greeting_btnThree__WjTOl\",\"HW3\":\"Greeting_HW3__3HcAJ\",\"totalUser\":\"Greeting_totalUser__1zTzK\",\"superButton\":\"Greeting_superButton__Xcm1X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Affairs_someClass__1L9Sc\",\"buttons\":\"Affairs_buttons__ghIFP\",\"HW2\":\"Affairs_HW2__x0plf\",\"affair\":\"Affairs_affair__1G4JL\",\"affairSpan\":\"Affairs_affairSpan__BNIDh\",\"affairInputButton\":\"Affairs_affairInputButton__JRzwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__9uRum\",\"avatar\":\"Message_avatar__3QxFL\",\"data\":\"Message_data__1GHAA\",\"name\":\"Message_name__2_X0i\",\"messageText\":\"Message_messageText__2fA26\",\"blockTime\":\"Message_blockTime__UoAN4\",\"time\":\"Message_time__29i4T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__3w8m1\",\"first1\":\"SuperButton_first1__3Abca\",\"disabled\":\"SuperButton_disabled__2vVSp\",\"btn\":\"SuperButton_btn__3_MZ5\",\"first\":\"SuperButton_first__2JyK8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"Header_dropdown__1dJFM\",\"navLinks\":\"Header_navLinks__19tp5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__34yKO\",\"errorInput\":\"SuperInputText_errorInput__1FYDy\",\"errorInputOn\":\"SuperInputText_errorInputOn__37u5S\",\"error\":\"SuperInputText_error__3k1eI\",\"superInput\":\"SuperInputText_superInput__1NI5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__3m-fF\",\"column\":\"HW4_column__3rsLx\",\"testSpanError\":\"HW4_testSpanError__3m8lq\",\"testInputClassName\":\"HW4_testInputClassName__39GC_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2G9M8\",\"spanClassName\":\"SuperCheckbox_spanClassName__17gl7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1ZyPf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanB\":\"SuperEditableSpan_spanB__2BVCn\"};","import React from 'react'\r\nimport s from \"./Message.module.css\"\r\n\r\ntype messagePropsType = {\r\n    avatar: string\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\nfunction Message(props: messagePropsType) {\r\n    return (\r\n        <div className={s.message}>\r\n\r\n          <div className={s.avatar}><img src={props.avatar} alt={'some ava'}/></div>\r\n\r\n            <div className={s.data}>\r\n                <div className={s.name}> {props.name}</div>\r\n                <span className={s.messageText}>{props.message}</span>\r\n                <div className={s.blockTime}><span className={s.time}>{props.time}</span></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Artem',\r\n    message: 'npm start нажимал?',\r\n    time: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n            <hr/>\r\n            <hr/>\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red,\r\n        className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n\r\n    const finalClassName = `${red ? `${s.btn} ${s.first}` : `${s.default} ${s.first1}`} ${className}`\r\n\r\n    const disabledStyle = s.disabled\r\n\r\n    return (\r\n        <button\r\n            className={restProps.disabled ? disabledStyle : finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n        )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react'\r\nimport {AffairType} from \"./HW2\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport s from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType // need to fix any\r\n    deleteAffairCallback: (_id: number)=> void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n    }// need to fix\r\n\r\n    return (\r\n        <div className={s.affair}>\r\n            <SuperButton onClick={deleteCallback}>X</SuperButton> <span className={s.affairSpan}>{props.affair.name} {props.affair.priority}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter && e.key === 'Enter' && onEnter()\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${s.input} ${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input type={'text'} onChange={onChangeCallback} onKeyPress={onKeyPressCallback} className={finalInputClassName}  {...restProps} />\r\n\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n\r\n            </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {useState} from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, FilterType} from './HW2'\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport s from './Affairs.module.css'\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: (filter: FilterType) => void\r\n    deleteAffairCallback: (_id: number) => void\r\n    text: string\r\n    setText: (text: string) => void\r\n    setAffairs: (affairs: Array<AffairType>) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n      <div key={a._id} >\r\n        <Affair // should work\r\n            // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n      </div>\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n    const onChangeInput = (event: any) => {\r\n        let someText = event.currentTarget.value\r\n        props.setText(someText)\r\n        setError(null)\r\n    }\r\n\r\n    const addAffair = () => {\r\n        if (props.text.trim() === '') {\r\n            setError('error')\r\n\r\n            return\r\n        } else {\r\n            props.setAffairs([{_id: props.data.length + 1, name: props.text, priority: 'high'}, ...props.data])\r\n            setError(null)\r\n            props.setText('')\r\n        }\r\n    }\r\n\r\n    let [error, setError] = useState<null | 'error'>(null)\r\n\r\n    const style = {\r\n        border: '1px solid red',\r\n\r\n    }\r\n    const styleTextError = {\r\n        color: 'red'\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.affairInputButton}>\r\n                {error ? <div><SuperInputText style={style} value={props.text} onChange={onChangeInput}/>\r\n                        <button onClick={addAffair}>Add</button>\r\n                        <br/>\r\n                        <div style={styleTextError}>Обязательно для заполнения</div>\r\n                    </div>\r\n                    : <div><SuperInputText value={props.text} onChange={onChangeInput}/>\r\n                        <SuperButton onClick={addAffair}>Add</SuperButton>\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n\r\n            {mappedAffairs}\r\n            <div className={s.buttons}>\r\n                <SuperButton onClick={setAll}>All</SuperButton>\r\n                <SuperButton onClick={setHigh}>High</SuperButton>\r\n                <SuperButton onClick={setMiddle}>Middle</SuperButton>\r\n                <SuperButton onClick={setLow}>Low</SuperButton>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\nimport s from './Affairs.module.css'\r\n\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle' // need to fix any\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n\r\n\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): any => { // need to fix any\r\n    if (filter === 'all') return affairs.filter(el => el)\r\n    if (filter === 'low') return affairs.filter(el => el.priority === 'low')\r\n    if (filter === 'high') return affairs.filter(el => el.priority === 'high')\r\n    if (filter === 'middle') return affairs.filter(el => el.priority === 'middle')\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): any => { // need to fix any\r\n    return affairs.filter(el => el._id !== _id)\r\n}\r\n\r\n\r\nconst HW2 = () => {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n\r\n    /////////////////////////\r\nlet [text, setText] = useState('text')\r\n    /////////////////////////\r\n\r\n    return (\r\n        <div className={s.HW2}>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                text={text}\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n                setText={setText}\r\n                setAffairs={setAffairs}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string | null // need to fix any\r\n    totalUsers: number // need to fix any\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = error ? s.error : s.someClass// need to fix with (?:)\r\n\r\n\r\n    return (\r\n        <div>\r\n            <SuperInputText value={name} onChange={setNameCallback} className={error ? s.error : s.someClass} />\r\n          {/*  <input placeholder={'what is your name?'} value={name} onChange={setNameCallback} className={inputClass}/>*/}\r\n            <span className={error ? s.errorSpan : ''}>{error}</span>\r\n            {/*<span onClick={addUser} className={`${s.btnThree} ${s.btn}` }>add</span>*/}\r\n            <div className={s.superButton}><SuperButton onClick={addUser}>add</SuperButton></div>\r\n            <span className={s.totalUser}>{totalUsers}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<null | 'Field is required'>(null) // need to fix any\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\r\n        let text = e.currentTarget.value\r\n        setName(text)\r\n        setError(null)// need to fix\r\n        console.log(name)\r\n    }\r\n    const addUser = () => {\r\n        if (name.trim() !== '') {\r\n            addUserCallback(name)\r\n            setName('')\r\n            alert(`Hello, ${name}!`)\r\n        } else {\r\n            setError('Field is required')\r\n        }\r\n\r\n        // need to fix\r\n    }\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n\r\n        <div className={s.HW3}>\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let user = {_id: v1(), name: name}\r\n        setUsers([user, ...users]) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText value={text} onChangeText={setText} onEnter={showAlert} spanClassName={s.testSpanError} className={s.testInputClassName} error = {error}/>\r\n\r\n\r\n                <SuperInputText className={s.blue} /> // проверьте, работает ли смешивание классов\r\n\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton red onClick={showAlert} >{/*// пропсу с булевым значением не обязательно указывать true*/}\r\n                     delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './SuperEditableSpan.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        // setEditMode() // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n         setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    const spanClassName = `${s.spanB} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        let valueFromLocalStorage = localStorage.getItem('editable-span-value')\r\n        if(valueFromLocalStorage ) {\r\n            setValue(valueFromLocalStorage.replace(/^.|.$/g,\"\"))\r\n        }}\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            <HW6/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PreJunior\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n        <div>\r\n            <h3>\r\n                JUNIOR_PLUS\r\n            </h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default JuniorPlus;","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: any[] = options ? options.map((el, index) => {\r\n        return(\r\n            <option key={index} value={el}>{el}</option>\r\n        )\r\n    }) : [] // map options with key\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n        console.log(restProps)\r\n        // onChange, onChangeOption\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default SuperSelect\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n\r\n    const onChangeCallback = (el: string) => {\r\n        onChangeOption && onChangeOption(el)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const mappedOptions: any[] = options ? options.map((o, i) => {\r\n\r\n        return <label key={name + '-' + i}>\r\n            <input type={'radio'} name={'radioGroup1'} checked={o === value}\r\n                   onChange={()=>{onChangeCallback(o)}} />\r\n            {o}\r\n        </label>\r\n    }) : []\r\n\r\n\r\n    const mappedOptions2: any[] = options ? options.map((o, i) => {\r\n\r\n        return <label key={name + '-' + i}>\r\n            <input type={'radio'} name={'radioGroup2'}\r\n                    />\r\n            {o}\r\n        </label>\r\n    }) : []\r\n\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n            {mappedOptions} - эти в связке с useState из HW7\r\n        </div>\r\n            <div>\r\n            {mappedOptions2}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperRadio\r\n","import React, {useState} from 'react'\r\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\r\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\r\n\r\nconst arr = ['x', 'y', 'z']\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1])\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n            <div>\r\n                <SuperRadio\r\n                    name={'radio'}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW7\r\n","import React from 'react';\r\nimport HW7 from \"../../h7/HW7\";\r\n\r\nconst Junior = () => {\r\n    return (\r\n        <div>\r\n            <h3>\r\n                <HW7/>\r\n            </h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Junior;","import React from 'react'\r\n\r\nimport HW2 from \"../h2/HW2\";\r\nimport {Outlet, Route, Routes} from \"react-router-dom\";\r\nimport HW3 from \"../h3/HW3\";\r\nimport HW4 from \"../h4/HW4\";\r\nimport HW1 from \"../h1/HW1\";\r\nimport {EmptyPage} from \"./EmptyPage\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport HW6 from \"../h6/HW6\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\nimport Junior from \"./pages/Junior\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus',\r\n\r\n    // add paths\r\n}\r\n\r\nfunction Routess() {\r\n    return (\r\n        <div>\r\n\r\n            <Routes>\r\n\r\n                <Route path={'/'} element={<PreJunior/>}/>\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n             {/*   <Route path={PATH.PRE_JUNIOR + '/dz1'} element={<div><HW1/> <Outlet/></div>}>\r\n                    <Route path={PATH.PRE_JUNIOR + '/dz1/empty/'} element={<EmptyPage/>}/>\r\n                </Route>\r\n\r\n                <Route path={PATH.PRE_JUNIOR + '/dz2'} element={<HW2/>}/>\r\n                <Route path={PATH.PRE_JUNIOR + '/dz3'} element={<HW3/>}/>\r\n                <Route path={PATH.PRE_JUNIOR + '/dz4'} element={<HW4/>}/>\r\n                <Route path={PATH.PRE_JUNIOR + '/dz6'} element={<HW6/>}/>*/}\r\n            </Routes>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routess\r\n\r\n\r\n{/*Switch выбирает первый подходящий роут*/\r\n}\r\n{/*<Switch>*/\r\n}\r\n\r\n{/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/\r\n}\r\n{/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/\r\n}\r\n{/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/\r\n}\r\n\r\n{/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/\r\n}\r\n// add routes\r\n\r\n{/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/\r\n}\r\n{/*<Route render={() => <Error404/>}/>*/\r\n}\r\n\r\n{/*</Switch>*/\r\n}\r\n\r\n{/*<Switch>*/\r\n}\r\n{/*    <Route path={'/'} exact render={() => <HW1/>}/>*/\r\n}\r\n{/*    <Route path={'/hw2'} render={() => <HW2/>}/>*/\r\n}\r\n{/*</Switch>*/\r\n}","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.css'\r\nimport {PATH} from \"./Routes\";\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={s.navLinks}>\r\n\r\n\r\n            <NavLink to={PATH.PRE_JUNIOR} className={({isActive})=> isActive ? s.active : ''}>PRE_JUNIOR</NavLink>\r\n            <NavLink to={PATH.JUNIOR} className={({isActive})=> isActive ? s.active : ''}>JUNIOR</NavLink>\r\n            <NavLink to={PATH.JUNIOR_PLUS} className={({isActive})=> isActive ? s.active : ''}>JUNIOR_PLUS</NavLink>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*            <li><NavLink style={(params)=>{\r\n                return {color: params.isActive ? \"green\" : 'black'} }} to={PATH.PRE_JUNIOR + '/dz1'}>ДЗ1</NavLink></li>\r\n            <li><NavLink style={(params)=>{ return {color: params.isActive ? \"green\" : 'black'} }} to={PATH.PRE_JUNIOR + '/dz2'}>ДЗ2</NavLink></li>\r\n            <li><NavLink style={(params)=>{\r\n                return {color: params.isActive ? \"green\" : 'black'} }} to={PATH.PRE_JUNIOR + '/dz3'}>ДЗ3</NavLink></li>\r\n\r\n            <li><NavLink to={PATH.PRE_JUNIOR + '/dz4'} className={({isActive})=> isActive ? s.activBG : ''}>ДЗ4</NavLink></li>\r\n            <li><NavLink to={PATH.PRE_JUNIOR + '/dz6'} className={({isActive})=> isActive ? s.activBG : ''}>ДЗ6</NavLink></li>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routess from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n\r\n            <Header/>\r\n            <Routess/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n\r\n\r\n        <div className={s.App}>\r\n\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\n            <Routes>\r\n                <Route path={'/'} element={<HW1/>}/>\r\n                <Route path={'/hw2'} element={<HW2/>}/>\r\n            </Routes>\r\n*/}\r\n\r\n\r\n            {/*\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}